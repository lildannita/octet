// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Goldyshev Danil",
            "url": "https://github.com/lildannita"
        },
        "license": {
            "name": "GPL 3.0",
            "url": "https://www.gnu.org/licenses/gpl-3.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Проверка, работает ли сервис и менеджер хранилища",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Проверка работоспособности",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.HealthCheckResponse"
                        }
                    }
                }
            }
        },
        "/octet/v1": {
            "post": {
                "description": "Сохранение строки UTF-8 и получение UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "strings"
                ],
                "summary": "Добавление новой строки",
                "parameters": [
                    {
                        "description": "Строка для сохранения",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DataHeader"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.UuidHeader"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorHeader"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorHeader"
                        }
                    }
                }
            }
        },
        "/octet/v1/{uuid}": {
            "get": {
                "description": "Извлечение строки из хранилища по её UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "strings"
                ],
                "summary": "Получение строки по UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID строки",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DataHeader"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorHeader"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorHeader"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновление строки по её UUID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "strings"
                ],
                "summary": "Обновление существующей строки",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID строки",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Новое значение строки",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.DataHeader"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorHeader"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorHeader"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаление строки по её UUID",
                "tags": [
                    "strings"
                ],
                "summary": "Удаление строки",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID строки",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorHeader"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorHeader"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.DataHeader": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "api.ErrorHeader": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.HealthCheckResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "api.UuidHeader": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "octet API",
	Description:      "Сервис хранения строк UTF-8 с идентификаторами UUID",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
